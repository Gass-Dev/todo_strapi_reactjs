{"ast":null,"code":"var _jsxFileName = \"/Users/gwen/Documents/todo_strapi_reactjs/web/todo_app/src/components/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // import TodoForm from \"./TodoForm\";\n\nimport { RiCloseCircleLine } from \"react-icons/ri\";\nimport { TiEdit } from \"react-icons/ti\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo({\n  todos,\n  completeTodo,\n  removeTodo\n}) {\n  _s();\n\n  const [edit, setEdit] = useState({\n    id: null,\n    value: \"\"\n  });\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n\n  return todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: todo.isComplete ? \"todo-complete\" : \"todo-row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onclick: () => completeTodo(todo.id),\n      children: todo.text\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icon\",\n      children: [/*#__PURE__*/_jsxDEV(RiCloseCircleLine, {\n        onClick: () => removeTodo(todo.id),\n        className: \"delete-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TiEdit, {\n        onClick: () => setEdit({\n          id: todo.id,\n          value: todo.text\n        }),\n        className: \"edit-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this));\n}\n\n_s(Todo, \"DJZiNdvmL+6jjh34b/0zH6N4WRE=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/gwen/Documents/todo_strapi_reactjs/web/todo_app/src/components/Todo.js"],"names":["React","useState","RiCloseCircleLine","TiEdit","Todo","todos","completeTodo","removeTodo","edit","setEdit","id","value","submitUpdate","updateTodo","map","todo","index","isComplete","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,SAASC,MAAT,QAAuB,gBAAvB;;;AAEA,SAASC,IAAT,CAAc;AAACC,EAAAA,KAAD;AAAQC,EAAAA,YAAR;AAAsBC,EAAAA;AAAtB,CAAd,EAAiD;AAAA;;AAC/C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC;AAC/BS,IAAAA,EAAE,EAAE,IAD2B;AAE/BC,IAAAA,KAAK,EAAE;AAFwB,GAAD,CAAhC;;AAKA,QAAMC,YAAY,GAAGD,KAAK,IAAI;AAC5BE,IAAAA,UAAU,CAACL,IAAI,CAACE,EAAN,EAAUC,KAAV,CAAV;AACAF,IAAAA,OAAO,CAAC;AACNC,MAAAA,EAAE,EAAC,IADG;AACGC,MAAAA,KAAK,EAAE;AADV,KAAD,CAAP;AAGD,GALD;;AAOA,SAAON,KAAK,CAACS,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACf;AAAK,IAAA,SAAS,EAAED,IAAI,CAACE,UAAL,GAAkB,eAAlB,GAAoC,UAApD;AAAA,4BACE;AAAmB,MAAA,OAAO,EAAE,MAAMX,YAAY,CAACS,IAAI,CAACL,EAAN,CAA9C;AAAA,gBACGK,IAAI,CAACG;AADR,OAAUH,IAAI,CAACL,EAAf;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE,QAAC,iBAAD;AACA,QAAA,OAAO,EAAE,MAAMH,UAAU,CAACQ,IAAI,CAACL,EAAN,CADzB;AAEA,QAAA,SAAS,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,MAAD;AACA,QAAA,OAAO,EAAE,MAAMD,OAAO,CAAC;AAAEC,UAAAA,EAAE,EAAEK,IAAI,CAACL,EAAX;AAAeC,UAAAA,KAAK,EAAEI,IAAI,CAACG;AAA3B,SAAD,CADtB;AAEA,QAAA,SAAS,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,KAAqEF,KAArE;AAAA;AAAA;AAAA;AAAA,UADK,CAAP;AAiBD;;GA9BQZ,I;;KAAAA,I;AAgCT,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\n// import TodoForm from \"./TodoForm\";\nimport { RiCloseCircleLine } from \"react-icons/ri\";\nimport { TiEdit } from \"react-icons/ti\";\n\nfunction Todo({todos, completeTodo, removeTodo}) {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: \"\",\n  });\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value)\n    setEdit({\n      id:null, value: ''\n    })\n  }\n\n  return todos.map((todo, index) => (\n    <div className={todo.isComplete ? \"todo-complete\" : \"todo-row\"} key={index}>\n      <div key={todo.id} onclick={() => completeTodo(todo.id)}>\n        {todo.text}\n      </div>\n      <div className=\"icon\">\n        <RiCloseCircleLine\n        onClick={() => removeTodo(todo.id)}\n        className=\"delete-icon\"\n        />\n        <TiEdit \n        onClick={() => setEdit({ id: todo.id, value: todo.text})}\n        className=\"edit-icon\"\n        />\n      </div>\n    </div>\n  ));\n}\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}