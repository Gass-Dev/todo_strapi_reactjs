{"ast":null,"code":"var _jsxFileName = \"/Users/gwen/Documents/todo_strapi_reactjs/web/todo_app/src/App.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport logo from \"./logo.svg\";\nimport './Css/App.css'; // function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <h1>Todo List</h1>\n//       </header>\n//     </div>\n//   );\n// }\n// export default App;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Notes extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      notes: [],\n      error: null\n    };\n\n    this.componentDidMount = async () => {\n      try {\n        const response = await axios.get(\"https://strapi.naoroy.dev/\");\n        this.setState({\n          notes: response.data\n        });\n      } catch (error) {\n        this.setState({\n          error\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      error\n    } = this.state; // Print errors if analytics\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" An error occured: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Notes\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.states.notes.map(note => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: note.name\n        }, note.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Notes;","map":{"version":3,"sources":["/Users/gwen/Documents/todo_strapi_reactjs/web/todo_app/src/App.js"],"names":["React","axios","Notes","Component","state","notes","error","componentDidMount","response","get","setState","data","render","message","states","map","note","name","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,OAAO,eAAP,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AAGA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAElCC,KAFkC,GAE1B;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,KAAK,EAAE;AAFD,KAF0B;;AAAA,SAQlCC,iBARkC,GAQd,YAAY;AAC9B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAU,4BAAV,CAAvB;AACA,aAAKC,QAAL,CAAc;AAAEL,UAAAA,KAAK,EAAEG,QAAQ,CAACG;AAAlB,SAAd;AACD,OAHD,CAGE,OAAOL,KAAP,EAAc;AACd,aAAKI,QAAL,CAAc;AAAEJ,UAAAA;AAAF,SAAd;AACD;AACF,KAfiC;AAAA;;AAgBlCM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEN,MAAAA;AAAF,QAAY,KAAKF,KAAvB,CADO,CAGP;;AACA,QAAIE,KAAJ,EAAW;AACT,0BAAO;AAAA,0CAAyBA,KAAK,CAACO,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AAED,wBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACE;AAAA,kBACG,KAAKC,MAAL,CAAYT,KAAZ,CAAkBU,GAAlB,CAAuBC,IAAD,iBACrB;AAAA,oBAAmBA,IAAI,CAACC;AAAxB,WAASD,IAAI,CAACE,EAAd;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAjCiC;;AAoCpC,eAAehB,KAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport logo from './logo.svg';\nimport './Css/App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <h1>Todo List</h1>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\nclass Notes extends React.Component {\n  //State of application component\n  state = {\n    notes: [],\n    error: null,\n  };\n\n  // Fetch of notes immediately after the component is mounted\n  componentDidMount = async () => {\n    try {\n      const response = await axios.get(\"https://strapi.naoroy.dev/\");\n      this.setState({ notes: response.data });\n    } catch (error) {\n      this.setState({ error });\n    }\n  };\n  render() {\n    const { error } = this.state;\n\n    // Print errors if analytics\n    if (error) {\n      return <div> An error occured: {error.message}</div>;\n    }\n\n    return (\n      <div className=\"Notes\">\n        <ul>\n          {this.states.notes.map((note) => (\n            <li key={note.id}>{note.name}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Notes;"]},"metadata":{},"sourceType":"module"}